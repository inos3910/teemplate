@use "sass:math";
@use "./variable" as *;

@function sizeCalc($size, $base, $unit) {
  $raw_val: math.div($size, $base) * 100;
  $floor_val: math.div(math.floor($raw_val * 100), 100);
  @return $floor_val + #{$unit};
}

@function vw-size($size, $base) {
  $raw_val: math.div($size, $base) * 100;
  $floor_val: math.div(math.floor($raw_val * 100), 100);
  @return $floor_val * 1vw;
}

@function vw-size-pc($size) {
  $raw_val: math.div($size, $w) * 100;
  $floor_val: math.div(math.floor($raw_val * 100), 100);
  @return $floor_val * 1vw;
}

@function vw-size-sp($size) {
  $raw_val: math.div($size, $w_sp) * 100;
  $floor_val: math.div(math.floor($raw_val * 100), 100);
  @return $floor_val * 1vw;
}

/// Replace `$search` with `$replace` in `$string`
/// @author Hugo Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

/// Remove the unit of a length
/// @param {Number} $number - Number to remove unit from
/// @return {Number} - Unitless number
@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) {
    @return math.div($number, ($number * 0 + 1));
  }

  @return $number;
}
